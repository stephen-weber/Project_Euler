//
//  main.cpp
//  euler12
//
//  Created by Stephen Weber on 1/22/13.
//  Copyright (c) 2013 Stephen Weber. All rights reserved.
//
/*
Highly divisible triangular number
Problem 12
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?


Answer:
76576500
Completed on Wed, 23 Jan 2013, 03:16
*/

#include <iostream>
#include <cmath>
#include <vector>

using namespace std;


 bool divisors(int n){
 int endnum =  pow(n,.5)+1;
 int facts=2;
 for (int i=2;i<endnum;i++){
    if ((n%i)==0) {
    facts+=2;}
 }
 if (facts>500) {
    cout<<"THE ANSWER for Problem0012 is "<<n<<" with :"<<facts<<endl;
    return true;
 }
 return false;
 }

int main(int argc, const char * argv[])
{
    for (int q=1;q<2200000;q++){
    int h =(q*(q+1.0))/2.0;
    if (divisors(h))
{

    return 0;
}    }

    return 0;
}

